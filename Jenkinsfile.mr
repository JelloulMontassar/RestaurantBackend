pipeline {
    agent any

    // Optionally, you can guard the entire pipeline if you only ever
    // want it to run when an MR is detected. (Some Jenkins versions
    // do not fully support top-level "when" in Declarative.)
    //
    // For maximum compatibility, we usually put "when" conditions
    // on each stage.

    stages {
        stage('Build') {
            when {
                // Run this stage only if this is a Merge Request build
                expression { return env.CHANGE_ID != null }
            }
            steps {
                echo "Building the application..."
                // e.g., on Windows use 'bat', on Linux use 'sh'
                // For Maven + Spring Boot:
                // sh "mvn clean package"
                // or
                // bat "mvnw.cmd clean package"
            }
        }

        stage('Unit Test') {
            when {
                expression { return env.CHANGE_ID != null }
            }
            steps {
                echo "Running unit tests..."
                // e.g.
                // sh "mvn test"
            }
        }

        stage('Integration Test') {
            when {
                expression { return env.CHANGE_ID != null }
            }
            steps {
                echo "Running integration tests..."
                // e.g.
                // sh "mvn verify"
            }
        }
    }

    post {
        always {
            echo "Pipeline completed. Post actions (e.g., cleanup) can go here."
        }
    }
}
