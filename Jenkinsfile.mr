pipeline {
    agent any

    // Trigger pipeline on push to GitHub (which includes pull request events)
    triggers {
        githubPush()
    }

    stages {
        // Checkout the code from the repository
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        // Verify that the build.sh file exists
        stage('Verify Files') {
            steps {
                script {
                    // Debugging step to verify file location
                    echo 'Listing files in the current directory:'
                    bat 'dir'  // List files to verify build.bat exists (use 'dir' for Windows)
                }
            }
        }

        // Build the application
        stage('Build') {
            steps {
                script {
                    echo 'Building the application...'
                    bat 'echo Running build.bat script...'  // Log a message before running the script
                    // Run the build.sh script with Git Bash
                    bat '"C:\\Program Files\\Git\\bin\\sh.exe" ./build.sh'
                }
            }
        }

        // Verify that the build artifacts were created
        stage('Verify Build Artifacts') {
            steps {
                script {
                    echo 'Verifying build artifacts...'
                    bat 'echo Verifying build artifacts in the build directory...'  // Log message before verification
                    bat 'dir build'  // Modify to your build directory if necessary
                }
            }
        }

        // Run unit tests
        stage('Unit Test') {
            steps {
                script {
                    echo 'Running unit tests...'
                    bat 'echo Running unit tests with run_tests.bat script...'  // Log a message before running unit tests
                    bat '"C:\\Program Files\\Git\\bin\\sh.exe" ./run_tests.sh'  // Run unit tests with Git Bash
                }
            }
        }

        // Run integration tests
        stage('Integration Test') {
            steps {
                script {
                    echo 'Running integration tests...'
                    bat 'echo Running integration tests with run_integration_tests.bat script...'  // Log a message before running integration tests
                    bat '"C:\\Program Files\\Git\\bin\\sh.exe" ./run_integration_tests.sh'  // Run integration tests with Git Bash
                }
            }
        }
    }

    post {
        always {
            echo 'Merge request pipeline completed.'
        }
    }
}
