pipeline {
    agent any

    stages {
        // (Optional) Debug stage to check environment variables
        stage('Debug Env') {
            steps {
                script {
                    // Print out the env variables to see the ones from GitLab
                    echo "gitlabTargetBranch: ${env.gitlabTargetBranch}"
                    echo "gitlabSourceBranch: ${env.gitlabSourceBranch}"
                }
            }
        }

        stage('Build') {
            when {
                expression {
                    // Only run if there's a Merge Request AND its target is 'main'
                    // The plugin sets env.gitlabTargetBranch for an MR
                    return env.gitlabTargetBranch == 'main'
                }
            }
            steps {
                echo "Building the application (MR -> main) ..."
                // For a Spring Boot app with Maven on Windows, use bat "mvnw clean package"
                // On Linux, use sh "mvn clean package"
                sh "mvn clean package"
            }
        }

        stage('Unit Test') {
            when {
                expression {
                    return env.gitlabTargetBranch == 'main'
                }
            }
            steps {
                echo "Running unit tests (MR -> main) ..."
                sh "mvn test"
            }
        }

        stage('Integration Test') {
            when {
                expression {
                    return env.gitlabTargetBranch == 'main'
                }
            }
            steps {
                echo "Running integration tests (MR -> main) ..."
                sh "mvn verify"
            }
        }
    }

    post {
        always {
            echo "Pipeline finished. Post actions or cleanup can go here."
        }
    }
}
