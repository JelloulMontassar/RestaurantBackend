pipeline {
    agent any

    triggers {
        // Trigger only when a branch with name release-* is created
        pollSCM('H/5 * * * *') // Poll every 5 minutes
    }

    stages {
        stage('Trigger Verification') {
            when {
                branch pattern: 'release-*', comparator: 'REGEXP'
            }
            steps {
                script {
                    echo "Branch matches 'release-*'. Proceeding with the pipeline."
                }
            }
        }

        stage('Build and Push Docker Image') {
            when {
                branch pattern: 'release-*', comparator: 'REGEXP'
            }
            steps {
                script {
                    def branchName = env.BRANCH_NAME
                    def dockerImage = "your-docker-registry/your-app:${branchName}"

                    echo "Building Docker image: ${dockerImage}"
                    sh "docker build -t ${dockerImage} ."

                    echo "Pushing Docker image: ${dockerImage}"
                    sh "docker push ${dockerImage}"
                }
            }
        }

        stage('Deploy Application') {
            when {
                branch pattern: 'release-*', comparator: 'REGEXP'
            }
            steps {
                script {
                    def branchName = env.BRANCH_NAME
                    def dockerImage = "your-docker-registry/your-app:${branchName}"

                    echo "Deploying application with Docker image: ${dockerImage}"

                    // Example deployment using Docker Compose
                    sh """
                        docker-compose down
                        docker-compose up -d --no-build
                    """
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline completed."
        }
    }
}
